buildscript {
    repositories {
        jcenter()
        maven {
            name = "Fabric"
            url = "https://maven.fabricmc.net/"
        }
        maven {
            name = "Forge"
            url = "https://files.minecraftforge.net/maven/"
        }
        maven {
            name = "Jitpack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        //SinÂ² Edition Loom
        classpath 'com.github.js6pak:fabric-loom:beta_mcp-SNAPSHOT'
    }
}

plugins {
    id 'maven-publish'
}
apply plugin: 'fabric-loom'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
    jcenter()
    maven {
        name = 'Jitpack'
        url = 'https://jitpack.io/'
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.mcp(loom.BETA, "${project.minecraft_version}.1", loom.mediafire("http://www.mediafire.com/file/03d94f13c9ulj5a/mcp43.zip/file"))
    modImplementation "com.github.modmuss50:fabric-loader:${project.loader_version}"

    modCompile 'club.minnced:java-discord-rpc:2.0.2'
    include 'club.minnced:java-discord-rpc:2.0.2'
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'com.google.guava:guava:28.2-jre'
    compile 'commons-io:commons-io:2.5'
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'org.apache.logging.log4j:log4j-api:2.13.0'
    compile 'org.apache.logging.log4j:log4j-core:2.13.0'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.12'
    compile group: 'org.mozilla', name: 'rhino', version: '1.7.12'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

remapJar {
    toMappings = 'official'
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
